const port = 4000;
const express = require("express");
const app = express();
const mongoose = require("mongoose");
const multer = require("multer");
const path = require("path");
const cors = require("cors");
// const bodyParser = require("body-parser");
const jwt = require("jsonwebtoken");

app.use(express.json());
app.use(cors());

// connect database with mongodb
// mongoose.connect("mongodb+srv://shop:shop@cluster0.nsxcvfy.mongodb.net/shop");
mongoose.connect("mongodb+srv://shop:shop@cluster0.nsxcvfy.mongodb.net/shop", {
  useNewUrlParser: true,
  useUnifiedTopology: true,
});

// Image storage engine
const storage = multer.diskStorage({
  destination: "./upload/images",
  filename: (req, file, cb) => {
    cb(
      null,
      `${file.fieldname}_${Date.now()}${path.extname(file.originalname)}`
    );
  },
});

const upload = multer({ storage: storage });

// Creating upload endpoint for images
app.use("/images", express.static("upload/images"));

app.post("/upload", upload.single("product"), (req, res) => {
  if (req.file) {
    res.json({
      success: true,
      image_url: `http://localhost:${port}/images/${req.file.filename}`,
    });
  } else {
    res.status(400).json({
      success: false,
      message: "Image upload failed",
    });
  }
});

// image storage engine
// const storage = multer.diskStorage({
//   destination: "./upload/images",
//   filename: (req, file, cb) => {
//     return cb(
//       null,
//       `${file.fieldname}_${Date.now()}${path.extname(file.originalname)}`
//     );
//   },
// });

// const upload = multer({ storage: storage });

// creating upload endpoint for images
// app.use("/images", express.static("upload/images"));

// app.post("/upload", upload.single("product"), (req, res) => {
//   res.json({
//     success: true,
//     image_url: `http://localhost:${port}/images/${req.file.filename}`,
//   });
// });

// Schema for creating products
// const Product = mongoose.model("Product", {
//   id: { type: Number, required: true },
//   name: { type: String, required: true },
//   image: { type: String, required: true },
//   category: { type: String, required: true },
//   new_price: { type: Number, required: true },
//   old_price: { type: Number, required: true },
//   date: { type: Date, default: Date.now },
//   available: { type: Boolean, default: true },
// });

app.get("/", (req, res) => {
  res.send("express is running.....");
});

// Add product
// app.post("/addproducts", async (req, res) => {
//   let products = await Product.find({});
//   let id = products.length > 0 ? products[products.length - 1].id + 1 : 1;

//   const product = new Product({
//     id: id,
//     name: req.body.name,
//     image: req.body.image,
//     category: req.body.category,
//     new_price: req.body.new_price,
//     old_price: req.body.old_price,
//   });

//   await product.save();
//   res.json({
//     success: true,
//     name: req.body.name,
//   });
// });

// Creating API for deleting product

// app.post("/removeproducts", async (req, res) => {
//   try {
//     await Product.findOneAndDelete({ id: req.body.id });
//     res.json({
//       success: true,
//       message: "Product removed successfully",
//     });
//   } catch (error) {
//     res.status(500).json({
//       success: false,
//       message: "Error removing product",
//       error: error.message,
//     });
//   }
// });

// Creating API for getting all products
// app.get("/allproducts", async (req, res) => {
//   let products = await Product.find({});
//   res.send(products);
// });

// Port
app.listen(port, (error) => {
  if (!error) {
    console.log("server running on port " + port);
  } else {
    console.log("error: " + error);
  }
});

// const port = 4000;
// const express = require("express");
// const app = express();
// const mongoose = require("mongoose");
// const jwt = require("jsonwebtoken");
// const multer = require("multer");
// const path = require("path");
// const cors = require("cors");
// const { error, log } = require("console");
// const { type } = require("os");

// app.use(express.json());
// app.use(cors());

// // connect database with mongodb
// mongoose.connect("mongodb+srv://shop:shop@cluster0.nsxcvfy.mongodb.net/shop");

// // api creation
// app.get("/", (req, res) => {
//   res.send("expres server is running.....");
// });

// // image storage engine
// const storage = multer.diskStorage({
//   destination: "./upload/images",
//   filename: (req, file, cb) => {
//     return cb(
//       null,
//       `${file.fieldname}_${Date.now()}${path.extname(file.originalname)}`
//     );
//   },
// });

// const upload = multer({ storage: storage });

// // creatimg upload endpoint for images
// app.use("/images", express.static("upload/images"));

// app.post("/upload", upload.single("product"), (req, res) => {
//   res.json({
//     success: "true",
//     image_url: `http://localhost:${port}/images/${req.file.filename}`,
//   });
// });

// // schema for creating products

// const Product = mongoose.model("Product", {
//   id: {
//     type: Number,
//     required: true,
//   },

//   name: {
//     type: String,
//     required: true,
//   },
//   image: {
//     type: String,
//     required: true,
//   },
//   category: {
//     type: String,
//     required: true,
//   },
//   new_price: {
//     type: Number,
//     required: true,
//   },
//   old_price: {
//     type: Number,
//     required: true,
//   },
//   date: {
//     type: Date,
//     default: Date.now,
//   },
//   avaliable: {
//     type: Boolean,
//     default: true,
//   },
// });

// // add to product
// app.post("/addproduct", async (req, res) => {
//   let products = await Product.find({});
//   let id;
//   if (products.length > 0) {
//     let last_product_array = products.slice(-1);
//     let last_product = last_product_array[0];
//     id = last_product.id + 1;
//   } else {
//     id = 1;
//   }

//   const product = new Product({
//     id: id,
//     name: req.body.name,
//     image: req.body.image,
//     category: req.body.category,
//     new_price: req.body.new_price,
//     old_price: req.body.old_price,
//   });
//   console.log(product);
//   await product.save();
//   console.log("saved data");
//   res.json({
//     success: true,
//     name: req.body.name,
//   });
// });

// // creating api for deleting  product

// app.post("/removeproduct", async (req, res) => {
//   await Product.findOneAndDelete({ id: req.body.id });
//   console.log("removed");
//   res.json({
//     success: true,
//     name: req.body.name,
//   });
// });

// // creating api for getting all products
// app.get("/allproducts", async (req, res) => {
//   let products = await Product.find({});
//   console.log("All product fethed");
//   res.send(products);
// });
// // port
// app.listen(port, (error) => {
//   if (!error) {
//     console.log("server running " + port);
//   } else {
//     console.log("error" + error);
//   }
// });
